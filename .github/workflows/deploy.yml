name: Deploy FastAPI to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-dev

      - name: Run tests
        run: |
          poetry run python -m pytest tests/

      # Step for logging into Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Set up Docker Buildx to support multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step for building and pushing multi-platform Docker image (including ARM64)
      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/arm64/v8  # Specify ARM64 platform for t4g.nano instances
          tags: ivesfurtado/mlops-fastapi-microservice:latest

      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/test.pem
          chmod 600 /tmp/test.pem

          ssh -o StrictHostKeyChecking=no -i /tmp/test.pem ec2-user@${{ secrets.EC2_IP }} '
            sudo yum update -y &&
            docker pull ivesfurtado/mlops-fastapi-microservice:latest &&
            docker stop $(docker ps -a -q) || true &&
            docker run -d -p 80:80 ivesfurtado/mlops-fastapi-microservice:latest
            '

      - name: Clean up SSH key
        run: |
          rm /tmp/test.pem